#Russian
"""
–î–∞–Ω–Ω–æ–µ –¢–ó –Ω–∞ –ø–æ–∑–∏—Ü–∏—é junior python dev.
–î–∞–Ω–Ω–æ–µ –¢–ó –∑–∞–Ω—è–ª–æ —É –º–µ–Ω—è 4 –ø–æ–ª–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è –∏–ª–∏ 32 —á–∞—Å–∞.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –∫–æ–¥—É : –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –û–û–ü  (–æ–±—å–µ–∫—Ç–Ω–æ -–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ ) 
–ì–æ—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç :  –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å  —Å—Å—ã–ª–∫—É –Ω–∞ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π  
–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –≤–≤–æ–¥ –∏ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏ ( input,print .–±–µ–∑ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ )
–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:  numpy, collections, json, logging, itertools, Enum

–ò–≥—Ä–æ–≤–∞—è –ö–∞—Ä—Ç–∞ üëáüèª 


–í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –≥–µ—Ä–æ—è–º –ø—Ä–æ–π—Ç–∏ –ø–æ –ª–∞–±–∏—Ä–∏–Ω—Ç—É.
–¢–æ –µ—Å—Ç—å, –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–¥—É–º–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ—à–µ–Ω–∏–π. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –í–≤–µ—Ä—Ö, –≤–Ω–∏–∑, –≤–ª–µ–≤–æ, –≤–ø—Ä–∞–≤–æ
—á–µ—Ä–µ–∑ –∏–Ω–ø—É—Ç –∏–ª–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏—à–∏, –∫–∞–∫ —Ö–æ—Ç–∏—Ç–µ. + –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±–∏—Ç—å –º–µ—á–æ–º –∏ –ø–æ–¥–Ω–∏–º–∞—Ç—å –∫–ª—é—á.
–ü–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏–µ —Ç—Ä–∞—Ç–∏—Ç –¥–µ–π—Å—Ç–≤–∏–µ –≥–µ—Ä–æ—è. –ï—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏—Ç—å –Ω–∞ –∫–ª–µ—Ç–∫—É —Å –∑–µ–ª–µ–Ω—ã–º —Å–µ—Ä–¥—Ü–µ–º —Ç–æ –ø—Ä–∏ —ç—Ç–æ–º –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤—Å—ë 
–∑–¥–æ—Ä–æ–≤—å–µ, —Å–µ—Ä–¥—Ü–µ –Ω–µ –∏—Å—á–µ–∑–∞–µ—Ç.

–ì–µ—Ä–æ–∏ –æ–±–ª–∞–¥–∞—é—Ç 5 –µ–¥–∏–Ω–∏—Ü–∞–º–∏ –ñ–∏–∑–Ω–∏, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –±–∏—Ç—å –≤—Å–µ—Ö –≥–µ—Ä–æ–µ–≤ –≤ —Ç–æ–π –∂–µ –∫–ª–µ—Ç–∫–µ –º–µ—á–æ–º(—Ç—Ä–∞—Ç–∏—Ç –¥–µ–π—Å—Ç–≤–∏–µ), –º–æ–≥—É—Ç –ø–æ–¥–Ω—è—Ç—å 
–∫–ª—é—á (–ø—Ä–∏ —ç—Ç–æ–º –æ–Ω –∏—Å—á–µ–∑–∞–µ—Ç –∏–∑ –∫–ª–µ—Ç–∫–∏, —Ç—Ä–∞—Ç–∏—Ç –¥–µ–π—Å—Ç–≤–∏–µ), –ª–µ—á–∏—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ (3 –∑–∞—Ä—è–¥–∞ –ø–æ 1 –ñ–∏–∑–Ω–∏, —Ç—Ä–∞—Ç–∏—Ç –¥–µ–π—Å—Ç–≤–∏–µ)

–£–°–õ–û–í–ò–Ø :

–ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∏–≥—Ä—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —á–∏—Å–ª–æ –≥–µ—Ä–æ–µ–≤. –ó–∞—Ç–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É –≤–≤–µ—Å—Ç–∏ –∏–º—è —Å–≤–æ–µ–≥–æ –ì–µ—Ä–æ—è.
–ó–∞—Ç–µ–º –ì–µ—Ä–æ–∏ –Ω–∞—á–∏–Ω–∞—é—Ç –ø–æ –æ—á–µ—Ä–µ–¥–∏ —Ö–æ–¥–∏—Ç—å, –∏—Ö –¥–µ–π—Å—Ç–≤–∏—è –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é logging –∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ 
–∫–æ–Ω—Å–æ–ª—å.
–ï—Å–ª–∏ –ì–µ—Ä–æ–π –≤—ã–±—Ä–∞–ª –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –∫–ª–µ—Ç–∫–æ–π, —Ç–æ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ—Ö–æ–¥–∞ (–ø–æ–ª—É—á–∏–ª –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ —É—Ä–æ–Ω –æ—Ç –æ–≥–Ω—è, 
–µ—Å—Ç—å –ª–∏ –≤ –Ω–æ–≤–æ–π –∫–ª–µ—Ç–∫–µ –¥—Ä—É–≥–∏–µ –≥–µ—Ä–æ–∏, –ø–æ–ª—É—á–∏–ª –ª–∏ –≥–µ—Ä–æ–π –ª–µ—á–µ–Ω–∏–µ, –µ—Å—Ç—å –ª–∏ –≤ –∫–ª–µ—Ç–∫–µ –∫–ª—é—á) –∏ –¥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ö–æ–¥ –¥—Ä—É–≥–æ–º—É 
–≥–µ—Ä–æ—é.
–ï—Å–ª–∏ –ì–µ—Ä–æ–π –ø–æ—à–µ–ª –≤ —Å—Ç–æ—Ä–æ–Ω—É —Å—Ç–µ–Ω—ã - –ø–∏—à–µ–º, —á—Ç–æ –≥–µ—Ä–æ–π —É–¥–∞—Ä–∏–ª—Å—è –æ —Å—Ç–µ–Ω—É, –≥–µ—Ä–æ–π —Ç–µ—Ä—è–µ—Ç 1 –æ—á–∫–æ –∂–∏–∑–Ω–∏.
–ì–µ—Ä–æ–π –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥.
–ï—Å–ª–∏ –ì–µ—Ä–æ–π –≤–µ—Ä–Ω—É–ª—Å—è —Ç—É–¥–∞ –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —Ö–æ–¥—É - –≤—ã–≤–æ–¥–∏–º –ì–µ—Ä–æ–π —Å—Ç—Ä—É—Å–∏–ª –∏ —É–±–µ–∂–∞–ª, –ì–µ—Ä–æ–π –≤—ã–≤–æ–¥–∏—Ç—Å—è –∏–∑ –∏–≥—Ä—ã. 
–ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –æ—Ä–∞–Ω–∂–µ–≤—ã–µ –∫–ª–µ—Ç–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥ –Ω–µ –º–µ–Ω—è–µ–º (—á—Ç–æ–±—ã –≥–µ—Ä–æ–π –º–æ–≥ –∑–∞–π—Ç–∏ –Ω–∞ –æ—Ä–∞–Ω–∂–µ–≤—É—é –∫–ª–µ—Ç–∫—É –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è, –Ω–æ –Ω–µ 
—Å–º–æ–≥ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ–π—Ç–∏ –Ω–∞–∑–∞–¥)
–ï—Å–ª–∏ –ì–µ—Ä–æ–π –∑–∞–∫–æ–Ω—á–∏–ª —Ö–æ–¥ —Å 0 –æ—á–∫–æ–≤ –∂–∏–∑–Ω–µ–π (—Ç.–µ. –æ—á–∫–∏ —É–ø–∞–ª–∏ –Ω–∞ –µ–≥–æ —Ö–æ–¥) - –≤—ã–≤–æ–¥–∏–º –ì–µ—Ä–æ–π –ø–æ–≥–∏–±, –ì–µ—Ä–æ–π –≤—ã–≤–æ–¥–∏—Ç—Å—è –∏–∑ –∏–≥—Ä—ã.
–ü—Ä–∏ –≥–∏–±–µ–ª–∏ –∏–ª–∏ –ø–æ–±–µ–≥–µ –µ—Å–ª–∏ —É –ì–µ—Ä–æ—è –±—ã–ª –∫–ª—é—á, –∫–ª—é—á –≤—ã–ø–∞–¥–∞–µ—Ç –≤ 
–ï—Å–ª–∏ –ì–µ—Ä–æ–π –Ω–∞—á–∞–ª —Ö–æ–¥ —Å 0 –æ—á–∫–æ–≤ –∂–∏–∑–Ω–µ–π (–µ–≥–æ —É–±–∏–ª –¥—Ä—É–≥–æ–π –≥–µ—Ä–æ–π –º–µ—á–æ–º –Ω–∞ —Å–≤–æ–π —Ö–æ–¥) - –≤—ã–≤–æ–¥–∏–º –ì–µ—Ä–æ–π –ø–æ–≥–∏–±, –ì–µ—Ä–æ–π –≤—ã–≤–æ–¥–∏—Ç—Å—è 
–∏–∑ –∏–≥—Ä—ã.
–ï—Å–ª–∏ –ì–µ—Ä–æ–π —Å –∫–ª—é—á–æ–º –¥–æ—à—ë–ª –¥–æ –ì–æ–ª–µ–º–∞(–∫–ª–µ—Ç–∫–∞ —Ñ–∏–Ω–∏—à) - –∏–≥—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∏ –≤—ã–≤–æ–¥–∏–º —á—Ç–æ –≥–µ—Ä–æ–π —Å —ç—Ç–∏–º –∏–º–µ–Ω–µ–º –ø–æ–±–µ–¥–∏–ª.
–ï—Å–ª–∏ –ì–µ—Ä–æ–π –±–µ–∑ –∫–ª—é—á–∞ –¥–æ—à—ë–ª –¥–æ –ì–æ–ª–µ–º–∞(–∫–ª–µ—Ç–∫–∞ —Ñ–∏–Ω–∏—à) - –ì–µ—Ä–æ–π –ø–æ–≥–∏–±–∞–µ—Ç (–µ–≥–æ —É–±–∏–≤–∞–µ—Ç –≥–æ–ª–µ–º), –≥–µ—Ä–æ–π, –≤—ã–≤–æ–¥–∏—Ç—Å—è –∏–∑ –∏–≥—Ä—ã.
–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ —Ä–∞—É–Ω–¥–∞ —Ö–æ–¥–æ–≤ –Ω–∞ —á–µ—Ç—ã—Ä—ë—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö –±–µ–ª—ã—Ö –∫–ª–µ—Ç–∫–∞—Ö –∑–∞–≥–æ—Ä–∞–µ—Ç—Å—è –æ–≥–æ–Ω—å. –ï—Å–ª–∏ —à–∞–≥–Ω—É—Ç—å –Ω–∞ –∫–ª–µ—Ç–∫—É 
—Å –æ–≥–Ω–µ–º - –≥–µ—Ä–æ–π —Ç–µ—Ä—è–µ—Ç –æ–¥–Ω—É –∂–∏–∑–Ω—å. –í –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ä–∞—É–Ω–¥–∞ —Å–æ–æ–±—â–∞—é—Ç—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–µ—Ç–æ–∫ —Å –æ–≥–Ω—ë–º 

–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ï –ó–ê–î–ê–ù–ò–ï :

–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –≤ JSON. 
–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º—ã –º–æ–∂–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–≥—Ä—ã, –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Å—Ç–∞—Ç—É—Å—ã –≤—Å–µ—Ö –≥–µ—Ä–æ–µ–≤. –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã 
–ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è. –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ–≥–æ. –ü—Ä–∏ –æ—Ç–∫–∞–∑–µ —É–¥–∞–ª—è–µ–º 
—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É —Å –Ω—É–ª—è, –ø—Ä–µ–¥–ª–∞–≥–∞—è –≤—ã–±—Ä–∞—Ç—å —á–∏—Å–ª–æ –∏–≥—Ä–æ–∫–æ–≤.

"""
#English
"""
This TOR (terms of reference) is for a junior python dev position.
This TOR took me 4 full working days or 32 hours.

Code requirement : use OOP (Object Oriented Programming). 
Finished result : provide a link to the GitHub repository  
Interface : console input and output ( input,print .no GUI )
Libraries that can be used: numpy, collections, json, logging, itertools, Enum

Game Map üëáüèª 


You need to write code that will allow the heroes to walk through a maze.
That is, you need to come up with an implementation of a control and decision checking system. Controls: Up, down, 
left, right.
Via input or keypress, whatever you want. + Ability to hit with sword and lift key.
Moving around spends the hero's action. Stepping on a square with a green heart restores all of your 
health, the heart does not disappear.

Heroes have 5 units of Life, the ability to hit all heroes in the same square with a sword (spends an action), can 
raise a key (it disappears). 
key (it disappears from the cage, spends an action), heal themselves (3 charges of 1 Life, spends an action).

CONDITIONS :

At the start of the game, we suggest choosing the number of heroes. Then we suggest each player to enter the name 
of his Hero.
Then the Heroes start taking turns, their actions and results are logged with logging and output to the 
console.
If the Hero has chosen a direction with a cell, then output to the console the result of the transition (whether 
the character received damage from fire, 
whether there are other heroes in the new cage, whether the hero received treatment, whether there is a key in the 
cage) and give the next move to another 
hero.
If the hero went towards the wall - write that the hero hit the wall, the hero loses 1 life point.
Hero can not miss a move.
If the hero returned to where he came from on the previous turn - withdraw Hero chickened out and ran away, the hero 
is withdrawn from the game. 
When moving to orange squares the last move is not changed (so that the hero can go to the orange square and return, 
but could not after that go back). 
be able to go back after that)
If the Hero finished his turn with 0 life points (i.e. points fell on his turn) - withdraw Hero is killed, Hero is 
withdrawn from the game.
At death or escape if the Hero had a key, the key falls in 
If the Hero started the turn with 0 life points (he was killed by another hero with a sword on his turn) - take out 
the Hero died, the Hero is removed from the game 
out of the game.
If the Hero with the key reached the Golem (cell finish) - the game ends and deduce that the hero with this name won.
If the Hero without the key reached the Golem (cell finish) - the Hero dies (he is killed by the Golem), the hero is 
taken out of the game.
Before the start of each new round of moves, a fire is lit on four random white squares. If you step on a square 
with fire, the hero loses one life. At the beginning of each round, the coordinates of the squares with fire are 
announced 

ADDITIONAL TASK :

Realize the system of saves in JSON. 
At any moment we can save game progress, location and statuses of all heroes. When starting a new game 
we check if there is a save. If there is a save - we offer to load it. In case of refusal we delete 
save and start a new game from scratch, offering to choose the number of players.
"""
from src.game_start import start_game

if __name__ == '__main__':
    start_game()